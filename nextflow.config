//
// Notes to End Users.
//
// The workflow should run without editing this configuration file,
// however there may be instances in which you wish to edit this
// file for compute performance or other reasons. Please see:
//
//   https://nextflow.io/docs/latest/config.html#configuration
//
// for further help editing this file.


params {
    help = false
    version = false
    analyse_unclassified = false
    fastq = null
    out_dir = "output"
    sample_sheet = null

    reference = null
    blastdb = null
    min_coverage = 20
    downsample = null
    min_qscore = 9
    basecaller_cfg = "dna_r10.4.1_e8.2_400bps_hac"
    medaka_consensus_model = null
    rbk = false

    aws_image_prefix = null
    aws_queue = null
    disable_ping = false

    monochrome_logs = false
    validate_params = true
    show_hidden_params = false
    schema_ignore_params = 'show_hidden_params,validate_params,monochrome_logs,aws_queue,aws_image_prefix,wf'

    wf {
        example_cmd = [
	    "--downsample 50",
            "--fastq 'wf-flu-demo/fastq'",
            "--sample_sheet 'wf-flu-demo/sample_sheet.csv'"
        ]

        container_sha = "sha5eeb2cd0a75a6cc0f47d689d2926e0d9922ceda8"
        common_sha = "sha91cd87900c86f05bf36d8c77b841b8fda5ecf3aa"
        typing_sha = "shacd6e6b77d14424d746c3d7332dfa13e3bda9034f"
        medaka_sha = "sha4f35e9f6f231dc8343c98e04d43517d4a38528a2"
        nextclade_sha = "shad0a8a0bf027edec8d452def0f29275fd67def643"
        agent = null
    }
}

manifest {
    name            = 'epi2me-labs/wf-flu'
    author          = 'Oxford Nanopore Technologies'
    homePage        = 'https://github.com/epi2me-labs/wf-flu'
    description     = 'Influenza A&B typing and analysis from Nanopore data.'
    mainScript      = 'main.nf'
    nextflowVersion = '>=23.04.2'
    version         = 'v1.1.0'
}

epi2melabs {
    tags = 'amplicon,viruses,public health'
    icon = 'faViruses'
}

env {
    PYTHONNOUSERSITE = 1
    JAVA_TOOL_OPTIONS = "-Xlog:disable -Xlog:all=warning:stderr"
}

process {
    withLabel:wf_common {
        container = "ontresearch/wf-common:${params.wf.common_sha}"
        memory = '2G'
    }
    withLabel:wfflu {
        container = "ontresearch/wf-flu:${params.wf.container_sha}"
        memory = '2G'
    }
    withLabel:wfflutyping {
        container = "ontresearch/abricate:${params.wf.typing_sha}"
        memory = '2G'
    }
    withLabel:nextclade {
        container = "ontresearch/nextclade:${params.wf.nextclade_sha}"
        memory = '2G'
    }
    withLabel:medaka {
        container = "ontresearch/medaka:${params.wf.medaka_sha}"
        memory = '2G'
    }       
}


profiles {
    // the "standard" profile is used implicitely by nextflow
    // if no other profile is given on the CLI
    standard {
        docker {
            enabled = true
            // this ensures container is run as host user and group, but
            //    also adds host user to the within-container group
            runOptions = "--user \$(id -u):\$(id -g) --group-add 100"
        }
    }

    // using singularity instead of docker
    singularity {
        singularity {
            enabled = true
            autoMounts = true
        }
    }


    conda {
        conda.enabled = true
    }

    // Using AWS batch.
    // May need to set aws.region and aws.batch.cliPath
    awsbatch {
        process {
            executor = 'awsbatch'
            queue = "${params.aws_queue}"
            withLabel:wf_common {
                container = "${params.aws_image_prefix}-wf-common:${params.wf.common_sha}"
                memory = '2G'
            }            
            withLabel:wfflu {
                container = "${params.aws_image_prefix}-wf-flu:${params.wf.container_sha}-root"
                memory = '2G'
            }
            withLabel:wfflutyping {
                container = "${params.aws_image_prefix}-abricate:${params.wf.typing_sha}-root"
                memory = '2G'
            }
            withLabel:nextclade {
                container = "${params.aws_image_prefix}-nextclade:${params.wf.nextclade_sha}-root"
                memory = '2G'
            }
            withLabel:medaka {
                container = "${params.aws_image_prefix}-medaka:${params.wf.medaka_sha}"
                memory = '2G'
            }
            shell = ['/bin/bash', '-euo', 'pipefail']
        }
    }
}


timeline {
  enabled = true
  overwrite = true
  file = "${params.out_dir}/execution/timeline.html"
}
report {
  enabled = true
  overwrite = true
  file = "${params.out_dir}/execution/report.html"
}
trace {
  enabled = true
  overwrite = true
  file = "${params.out_dir}/execution/trace.txt"
}
